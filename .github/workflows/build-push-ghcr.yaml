---
name: Build and publish a Docker image to ghcr.io
on:

  # publish on releases, e.g. v2.1.13 (image tagged as "2.1.13" - "v" prefix is removed)
  release:
    types: [published]

  # publish on pushes to the main branch (image tagged as "latest")
  push:
    branches: [main]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
#
jobs:
  docker_publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v2

      # Automatically generate tags and labels
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}

      #
      - name: Login to ghcr
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      #
      - uses: cachix/install-nix-action@v27
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      #
      - name: Free Runner Disk Space
        uses: jlumbroso/free-disk-space@main

      #
      - name: Build docker image
        run: |
          nix build .#dockerImage --out-link result.tar.gz

      #
      - name: Report free disk space
        run: df -h

      #
      - name: Load and push image
        run: |-
          docker load < result.tar.gz
          IMAGE_ID=$(docker load < result.tar.gz | grep "Loaded image:" | head -n1 | awk '{print $3}')

          # Convert newline-separated tags to array
          while IFS= read -r tag; do
            echo "pushing $IMAGE_ID as $tag"
            docker tag "$IMAGE_ID" "$tag"
            docker push "$tag"
          done <<< "${{ steps.meta.outputs.tags }}"
